#include <iostream>




// В   К Л А С С Е
//int mul (int a){
   // return a<<1; // сдвигаем число а на один бит (умножаем на 2), если <<2 - умножить на 2^2
//}
//int main(){
    
    //return 0;
//}
// uint_t b=1; //(1 байт занимет) 00000001 - двоичный вид числа b
// c=b*2; //00000010 - двоичный для с
// d=c*2; //00000100 - двочиный для d (единица двигается влево = сдвиг влево = умножаем на 2)

// b=5; (= 00000101 (в двоичной))
// b<<1; (= 00001010)
// b<<3; (= 00101000)
// b<<7; (= 10000000)



// c=00010110;
// c>>4; (= 00000001) все остальное забывается, уничтожается, потому что байт это 8



// a=00010000
// b=00000001
// a+b=00010001


// a=10 =00001010
// b=3  =00000011
// a+b  =00001101


// uint8_t i=1;(i=00000001) 
// uint8_t a=1;
// a=a<<4; = 00010000
// i=i+a; = 00010001
// любое число = массив бит

// uint8_t* arr=new uint8_t[4] - массив из 32 цифр
// с помощью битов можно хранить множество очень компактно
// на каких местах единицы, то и входит во множество (0-31) #  0, 31, 15, 16 ( 10000000000000011000000000000001 ), можно найти | и & множеств
// написать класс множество, эффективно реализовывает операции над множеством


// 12                12/size(uint8_t)=1;   12%sizeof(uint8_t)=4; // c единицы начинаем считать
// uint8_t mask=1;
// mask=mask<<4
// uint8_t q=
// a[1]&mask  где а[1] = 000?0001
// mask: 00010000
// 000?0000
// if (q==0) return 0;
// return 1;

// 2 множества